// MARK:- Stack

class Node<T>{
    let value : T
    var next : Node?
    
    init(value : T) {
        self.value = value
    }
}

class Stack<T>{
    
    var top : Node<T>?
    
    func push(value : T) {
        let oldValue = top
        top = Node(value: value)
        top?.next = oldValue
    }
    
    func pop() {
        top = top?.next
    }
    
    func peek() -> T? {
        return top?.value
    }
    
    func display() {
        var current = top
        while current != nil {
            print(current?.value ?? -1)
            current = current?.next
        }
    }
    
}

struct User{
    var name : String
    var username : String
}

let me = User(name: "Ankit", username: "@ankitsoni")
let you = User(name: "you", username: "@you")

let objStack = Stack<User>()
objStack.push(value: me)
objStack.push(value: you)
objStack.display()
